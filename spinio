#!/usr/bin/python
import os
import shutil
from distutils import spawn
import argparse
import time

parser = argparse.ArgumentParser()

parser.add_argument('--cloud', required=True, choices=['aws', 'gcloud'], help='choose cloud provider')
parser.add_argument('--mode', required=True, choices=['import', 'export'], help='Choose mode')
parser.add_argument('--bucket', required=True, help='bucket name to store or download archive')
parser.add_argument('--importFile', help='archive file name to import ')

args = parser.parse_args()

exportFile = 'spinnaker_export_' + time.time() + '.tgz'

uploadCmd = 'aws s3 cp ' + exportFile + ' s3://' + args.bucket

if args.cloud == 'gcloud':
    uploadCmd = 'gsutil cp ' + exportFile + ' gs://' + args.bucket

if not spawn.find_executable(args.cloud):
    raise Exception('Cannot find cloud sdk on path')

if not spawn.find_executable("cqlsh"):
    raise Exception('cqlsh not found on path')

if args.mode == 'import':
    if not args.importFile:
        raise Exception('--importFile required in import mode')

if args.mode == 'import':
    if os.path.exists('import'):
        shutil.rmtree('import')
    os.mkdir('import')
    #download from bucket and move to import
    os.system('cd import && tar -xvf ' + args.importFile)
if args.mode == 'export':
    if os.path.exists('export'):
        shutil.rmtree('export')
    os.mkdir('export')
    os.system('cqlsh -f cql/export.cql')
    os.system('cd export && tar -zcvf ../' + exportFile)
    #publish to bucket
